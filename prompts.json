{
    "CODE_SNIPPETS_TEMPLATE": [
      "Note: This query does not require a response. Please do not generate any reply.\n",
      "I will be using the following C code snippets in future discussions.\n",
      "{code}"
    ],
    "SUMMARIZE_VULNERABILITIES": [
      "Checkmarx Scan Report存在一个{Query} 的问题?\n",
      "请仔核对{Line}到{DestLine}行的{Name}代码是否存在{Query}问题?\n",
      "要求：\n",
      " - 这份代码是文件名为{SrcFileName}的一个片段，开始行号为{Line}，结束行号为{DestLine}.\n",
      " - 请结合Checkmarx的错误类型评估.\n",
      " - 请使用中文进行回答.\n",
      " - 如果缺失什么信息，请使用简单的描述提示我，例如：缺失代码，缺少宏定义，缺少函数等\n"
    ],
    "CHECKMARX_QUERY": [
      "请先完全理解Checkmarx报告类型为{Query}的问题，这个问题伴随{Name}发生。\n"
    ],
    "IDENTIFY_VULNERABILITIES": [
      "{code} \n",
      "请先完全理解Checkmarx报告显示第{Line}行号到第{DestLine}行号的{Name}函数存在{Query}问题。\n"
    ],
    "AUTO_FIX_CODE": [
      "请先理解第{Line}行号到第{DestLine}行号的代码，然后按照以下要求进行代码修改解决{Name}的{Query}问题：\n",
      "要求：\n",
      " 1. 代码修改：\n",
      "  - 请确保只对指定的行号范围从 {Line} 行号开始到 {DestLine}行号结束之间的代码进行修改，忽略任何超出此范围的错误或改动。\n",
      "  - 请确保所做的修改是有意义的，并直接应用于现有代码。避免无意义的修改，例如：\n",
      "     - 修改空格或格式，而不影响功能。\n",
      "     - 注释或审美上的改动。\n",
      "     - 不必要的修改。\n",
      "     - 占位符修改。\n",
      "  - 请替换函数，确保替换的函数适用于目标功能。\n",
      "  - 请提供每次替换的理由，重点关注代码安全性和可维护性的提升。\n",
      "  - 请确保所有更改都有助于改善代码的功能或逻辑。\n",
      "  - 请清晰地标明添加、修改或删除的代码行，确保修改后的代码功能完整且连贯。\n",
      " 2. 上下文格式：\n",
      "  - 确保修改的意义在于改善代码的功能或修复问题，而不是仅仅作为占位符。\n",
      " 3. 代码输出：\n",
      "  - 输出时去掉行号。\n",
      "  - 请输出完整代码块。\n",
      "  - 请突出显示任何重要的更改以便于理解。\n",
      "Please follow the above requirements in making the necessary modifications to the code.\n"
    ],
    "AUTO_FIX": [
      "按照以下要求对刚才的修复代码和我之前提供的代码diff生成patch。\n",
      "要求：\n",
      " 1. 请为路径为{SrcFileName}的文件，{Name}存在{Query}问题生成修复patch。\n",
      "  - 确保只对指定的行号范围从{Line}行号开始到{DestLine}行号结束之间的代码进行修改。\n",
      "  - 确保只对{Name}的{Query}问题进行修改，忽略任何超出此范围的错误或改动。\n",
      "  - 请确保所做的修改是有意义的，并直接应用于现有代码。避免无意义的修改，例如：\n",
      "    -- 修改空格或格式，而不影响功能。\n",
      "    -- 注释或审美上的改动。\n",
      "    -- 占位符修改。\n",
      "  - 请避免对字符串字或错误消息进行不必要的更改，除非这种修改对清晰度或正确性是必要的。\n",
      "  - 替换函数：确保替换的函数适用于目标功能。\n",
      "  - 请提供每次替换的理由，重点关注代码安全性和可维护性的提升。\n",
      "  - 请确保所有更改都有助于改善代码的功能或逻辑。\n",
      " 2. 输出格式：\n",
      "  - 请先理解git format-patch格式,然后按照格式生成修复patch。\n",
      "  - 如果遇到打印时间信息，请使用系统最新时间\n",
      "  - Subject使用以下格式: Subject: [PATCH] FRN: {SrcFileName}: {Line} to {DestLine} {Name} is {Query} fix\n",
      "  - 回答内容只限于修复patch的内容，其他任何信息都不需要返回。\n",
      "  - 中文字体使用UTF-8字符集编码\n",
      " 3. 校对：\n",
      "  - 请校对修复patch是否符合git format patch要求。\n",
      "  - 请校对修复patch内容准确性。\n",
      "  - 请校对修复patch内容完整性。\n",
      "  - 请校对修复patch无多余信息。\n",
      "  - 请校对修复patch中必须有任意一个或者多个'+'和'-'标记。\n",
      "  - 请校对修复patch中'+'和'-'标记行正确。\n"
    ],
    "IDENTIFY_VULNERABILITIES_OLD": [
      "As a security expert from Checkmarx, please analyze the following code snippet and identify potential security vulnerabilities.",
      " Please follow the format below strictly:\n",
      " 1. Line number: Confirm the issue exists between line {Line} and line {DestLine}.\n",
      " 2. Issue description: In file {SrcFileName}, on line {Line}, the function {Name} is used, which may cause a {Query} issue.\n",
      " 3. Fix suggestion: Provide a secure alternative in one sentence.\n",
      "File name: {SrcFileName}, code range: from line {Line} to line {DestLine}.\n",
      "Note: Keep the response concise without providing extra explanations or background information.\n"
    ],
    "AUTO_FIX_CODE_XML": [
      "Code Modification Guidance Template\n",
      "Please address the issue '{Query}' in '{Name}', This is related to the C code snippets I previously provided. Follow these requirements:\n",
      " 1. File Changes :\n",
      "  - Clearly list all files affected by the changes.\n",
      "  - Focus solely on modifications within the specified line number range from {Line} to {DestLine}. Any errors or changes outside this range should be ignored.\n",
      "  - Ensure that the changes made are meaningful and directly applicable to the existing code. Avoid modifications that result in identical lines being added and removed , such as:\n",
      "  - Changing spaces or formatting without altering functionality.\n",
      "  - Comments or cosmetic changes that do not improve the code's logic or clarity.\n",
      "  - When replacing functions (e.g., replacing rand with C++11 random generation), ensure that the replacement function is appropriate and matches the intended functionality .\n",
      " 2. Context Format :\n",
      "  - Clearly illustrate the context of the changes in a way that helps understand the modifications without including line numbers in the output.\n",
      "  - Use the appropriate file names and paths to indicate locations of changes.\n",
      "  - Ensure that the context reflects only substantial changes and avoid trivial edits that do not affect program behavior or effectiveness.\n",
      " 3. Modified Code Output :\n",
      "  - 基于提供的代码段，提供修改后的代码。清晰地标明添加、修改或删除的代码行，确保修改后的代码功能完整且连贯。\n",
      "  - 突出显示任何重要的更改以便于理解。\n",
      "Please follow the above requirements in making the necessary modifications to the code.\n",
      "{code}"
    ],
    "AUTO_FIX_DIFF": [
      "具体要修复的问题是：{Query}，问题出现在第 {Line} 行号到第 {DestLine} 行号的 {Name} 函数。\n",
      "这是一个 C 语言编程的代码片段，每行代码都以行号开始。代码如下：{code} 请按照以下要求进行修复操作：\n",
      "1. 标题信息：\n",
      "  请在补丁中包含提交元数据，例如作者、日期、提交哈希、提交信息等。\n",
      "  使用标准的 Git 提交信息格式。\n",
      "2. 文件修改：\n",
      "  请明确列出所有受影响的文件。\n",
      "  确保只对指定的行号范围从 {Line} 行号开始到 {DestLine}行号结束之间的代码进行修改，忽略任何超出此范围的错误或改动。\n",
      "  请确保所做的修改是有意义的，并直接应用于现有代码。避免无意义的修改，例如：\n",
      "     - 修改空格或格式，而不影响功能。\n",
      "     - 注释或审美上的改动。\n",
      "     - 不必要的修改。\n",
      "     - 占位符修改。\n",
      "  请避免对字符串字或错误消息进行不必要的更改，除非这种修改对清晰度或正确性是必要的。\n",
      "  替换函数：确保替换的函数适用于目标功能。\n",
      "  请提供每次替换的理由，重点关注代码安全性和可维护性的提升。\n",
      "  请确保所有更改都有助于改善代码的功能或逻辑。\n",
      "3. 上下文格式：\n",
      "  请使用 @@ -startLine,numberOfLines +startLine,numberOfLines @@ 的格式显示修改的上下文，并且不要在输出中包含行号。\n",
      "  在返回的补丁文件中，使用 {SrcFileName} 表示修改的路径和文件名。\n",
      "  确保修改的意义在于改善代码的功能或修复问题，而不是仅仅作为占位符。\n",
      "  请检查补丁文件，确保不引入空行，并且不引入额外的空行。\n",
      "4. 输出格式：\n",
      "  请使用 UTF-8 编码来生成补丁文件。\n",
      "  请确保补丁文件以 .patch 扩展名结尾，并符合标准的编码约定。\n",
      "  请在生成的补丁文件中添加一个注意事项，提示在安全环境中审查和测试补丁，以确保正确性。\n",
      "  请注意，避免在生成的补丁中引入完全空行，如果需要删除行，请确保只影响必要的行，并且不引入额外的空行。\n",
      "5.代码完整性：\n",
      "  请特别小心引入依赖项，确保修改后的代码完整性得到维护。\n",
      "Please follow the above requirements in making the necessary modifications to the code.\n"
    ],
    "REFRACT_FIX": [
      "Refactor the code to fix the issue.\n",
      "Requirements:\n",
      " - Please fix the Checkmarx issue in a git format patch based on the code i provided, to focus on the start with '{Line}:' line\n",
      " - Checkmarx found this line the {Name} has {Query} issues, you need to fix it\n",
      " - The name of the code file is {SrcFileName}, the start line number of the fix range is {Line}, and the end line number is {DestLine}.\n",
      " - The issue fix code should be complete without dependencies and not have any ellipsis (....) or abbreviations or comments for the code part\n",
      " - The issue fix code should not contain any line number markings\n",
      "以下是修复模板: {template}\n",
      "以下是原始代码: {code}\n"
    ],
    "REVIEW_PATCH": [
      "判断这个修复是否解决了Subject描述的问题？要求用中文回答。\n",
      "以下是patch内容: {patch_content}\n",
      "以下是原始代码: {code}\n"
    ],
    "REVIEW_FORMAT_PATCH": [
      "判断这个内容是否符合git format patch要求?并整理这个Patch可以直接应用\n",
      "以下是patch内容: {patch_content}\n",
      "以下是原始代码: {code}\n"
    ]
  }